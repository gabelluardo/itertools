name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 0 * * 0"

jobs:
  build: 
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.canary }} # Continue in case the canary run does not succeed
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        deno-version: [v2.x]
        canary: [false]
        include:
          - deno-version: canary
            os: ubuntu-latest
            canary: true
    steps:
      - uses: actions/checkout@v2
      - uses: denoland/setup-deno@v2

      - name: Format
        # formatting is different
        if: matrix.os != 'windows-latest'
        run: deno fmt --check

      - name: Lint
        run: deno lint

  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.canary }} # Continue in case the canary run does not succeed
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        deno-version: [v2.x]
        canary: [false]
        include:
          - deno-version: canary
            os: ubuntu-latest
            canary: true
    steps:
      - uses: actions/checkout@v2
      - uses: denoland/setup-deno@v2

      - name: Test
        run: deno test --doc --allow-all --coverage=cov/
      
      - name: Coverage
        run: deno coverage --lcov cov/ > cov.lcov

  bench:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.canary }} # Continue in case the canary run does not succeed
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        deno-version: [v2.x]
        canary: [false]
        include:
          - deno-version: canary
            os: ubuntu-latest
            canary: true
    steps:
      - uses: actions/checkout@v2
      - uses: denoland/setup-deno@v2

      - name: Benchmark
        run: deno bench
